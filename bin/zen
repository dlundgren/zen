#!/usr/bin/env php
<?php
declare(strict_types=1);

use WoohooLabs\Zen\Container\Builder\FileSystemContainerBuilder;

if (version_compare("7.4", PHP_VERSION, ">")) {
    fwrite(
        STDERR,
        "Woohoo Labs. Zen requires PHP 7.4 or later." . PHP_EOL
    );

    die(1);
}

require getAutoloadPath();

$optind = 0;
$options = getopt("m::p::", ["memory-limit::", "preload::"], $optind);

$memoryLimit = $options["memory-limit"] ?? ($options["m"] ?? "");
if ($memoryLimit !== "") {
    ini_set("memory_limit", $memoryLimit);
}

if (isset($argv[$optind]) === false) {
    die(1);
}

if ($argv[$optind] === "build") {
    $containerFilePath = $argv[$optind + 1];
    $compilerConfig = new $argv[$optind + 2]();
    $preloadFilePath = $options["preload"] ?? ($options["p"] ?? "");

    $builder = new FileSystemContainerBuilder($compilerConfig, $containerFilePath, $preloadFilePath);
    $builder->build();
}

if ($argv[$optind] === "preload") {
    $preloadFilePath = $argv[$optind + 1];
    $compilerConfig = new $argv[$optind + 2]();

    $builder = new FileSystemContainerBuilder($compilerConfig, "", $preloadFilePath);
    $builder->build();
}

function getAutoloadPath(): string
{
    $paths = [
        __DIR__ . "/../../../autoload.php",
        __DIR__ . "/../../vendor/autoload.php",
        __DIR__ . "/../vendor/autoload.php",
    ];

    foreach ($paths as $file) {
        if (file_exists($file)) {
            return $file;
        }
    }

    fwrite(STDERR, "You need Composer to set up the project dependencies!" . PHP_EOL);
    die(1);
}
